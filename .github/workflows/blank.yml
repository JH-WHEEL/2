# 工作流名称（可自定义，方便在 Actions 页面识别）
name: ZMK Firmware Build

# 触发条件：满足任一条件即执行
on:
  # 1. 代码推送到 main 分支时自动触发（若你的主分支是 master，需改为 branches: [master]）
  push:
    branches: [main]
    # 仅当 config 目录（配置文件）或工作流文件本身修改时触发，减少无效运行
    paths:
      - '.github/workflows/**'
      - 'config/**'
  # 2. 手动触发（在 Actions 页面点击“Run workflow”即可）
  workflow_dispatch:
    # 手动触发时可选择键盘配置（可选，按需添加）
    inputs:
      keyboard:
        description: '键盘型号（如 nice_nano_v2）'
        required: false
        default: 'all'

# 定义任务（仅1个核心任务：调用官方构建逻辑）
jobs:
  build-firmware:
    # 直接引用 ZMK 官方最新构建工作流（确保逻辑稳定）
    uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
    # 向官方工作流传递必要参数（关键配置，需与你的仓库匹配）
    with:
      # 1. 你的 ZMK 配置文件存放目录（默认是 config/，99% 情况无需修改）
      config-dir: config
      # 2. 构建日志详细程度（debug 方便排查问题，后续可改为 info）
      verbosity: debug
      # 3. 手动触发时指定键盘（与上方 workflow_dispatch 输入对应，可选）
      keyboard: ${{ github.event.inputs.keyboard }}
    # 授予工作流必要权限（确保能正常读取配置、上传固件压缩包）
    permissions:
      contents: read  # 读取仓库配置文件
      actions: read   # 读取工作流状态
      artifacts: write # 上传固件压缩包（核心权限，必须开启）
